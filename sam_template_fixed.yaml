AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Invoice Management System

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref InvoiceManagementTable
        EVENT_BUS_NAME: !Ref InvoiceManagementEventBus
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,invoice-id'"
      AllowOrigin: "'*'"

Resources:
  # DynamoDB Table
  InvoiceManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: InvoiceManagementTable
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: customer_id
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: customer_id-SK-index
          KeySchema:
            - AttributeName: customer_id
              KeyType: HASH
            - AttributeName: SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: SK-customer_id-index
          KeySchema:
            - AttributeName: SK
              KeyType: HASH
            - AttributeName: customer_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: ON_DEMAND

  # EventBridge Custom Bus
  InvoiceManagementEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: invoice-management-events

  # Lambda Function
  InvoiceManagementFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_deployment/
      Handler: lambda_function.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref InvoiceManagementTable
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref InvoiceManagementEventBus
      Events:
        # Invoice endpoints
        CreateInvoice:
          Type: Api
          Properties:
            Path: /invoices
            Method: post
        GetInvoices:
          Type: Api
          Properties:
            Path: /invoices
            Method: get
        GetInvoiceById:
          Type: Api
          Properties:
            Path: /invoices/{invoice_id}
            Method: get
        UpdateInvoice:
          Type: Api
          Properties:
            Path: /invoices
            Method: put
        DeleteInvoice:
          Type: Api
          Properties:
            Path: /invoices
            Method: delete
        ProcessPayment:
          Type: Api
          Properties:
            Path: /payments
            Method: post
        OverdueCheck:
          Type: Api
          Properties:
            Path: /overdue-check
            Method: post
        GenerateTestData:
          Type: Api
          Properties:
            Path: /test-data
            Method: post
        # Customer endpoints
        GetCustomers:
          Type: Api
          Properties:
            Path: /customers
            Method: get
        GetCustomerById:
          Type: Api
          Properties:
            Path: /customers/{customer_id}
            Method: get
        GetCustomerInvoices:
          Type: Api
          Properties:
            Path: /customers/{customer_id}/invoices
            Method: get
        GetCustomerStatistics:
          Type: Api
          Properties:
            Path: /customers/statistics
            Method: get

Outputs:
  InvoiceManagementApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  
  DynamoDBTable:
    Description: "DynamoDB table name"
    Value: !Ref InvoiceManagementTable